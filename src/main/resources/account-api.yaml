openapi: 3.0.4
info:
  title: Account - OpenAPI 3.0
  description: |-
    This is an Account application based on the OpenAPI 3.0 specification.  )
  termsOfService: https://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12
components:
   securitySchemes:
     ApiKeyAuth:
     type: apiKey
     in:  header
     name: X-API-KEY
security:
-  ApiKeyAuth: [X-API-KEY: "Account_Auth"]

externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
servers:
  - url: https://localhost:8080/api/v3
tags:
  - name: account
    description: Account information
#security:
#  - api_key: ["Account_Auth"]

paths:
  /accounts:
    get:
      tags:
        - accounts
      description: Get all accounts.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
    post:
      tags:
        - account
      description: Add a new Account.
      operationId: addAccount
      requestBody:
        description: Create a new Account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
            - read:accounts
    delete:
     tags:	
         -
  security:
   - api_key:  ["Account_Auth"]

  /accounts/{id}:
    get:
      tags:
        - accounts
      summary: Find account by id.
      parameters:
        - name: id
          in: query
      responses:
        '200':
          description: successful operation
          content:
            application/json:
        '401':
          description: Unauthorized
  delete:    
   put:
  /accounts/accountType/{accountType}:
    get:
      tags:
        - accounts
      summary: Finds account by account type.
      description: Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      parameters:
        - name: accountType
          in: query
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          description: Unauthorized
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - Accountstore_auth:
            - write:Accounts
            - read:Accounts
  /accounts/firstName/{firstName}:
    get:
      tags:
        - accounts
      summary: Find Account by ID.
      description: Returns a single Account.
      operationId: getAccountById
      parameters:
        - name: AccountId
          in: path
          description: ID of Account to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - api_key: []
        - Accountstore_auth:
            - write:Accounts
            - read:Accounts

		
				
	
	
